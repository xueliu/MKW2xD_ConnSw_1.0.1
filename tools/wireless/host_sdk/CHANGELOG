1.0.5
================================================================================
First version to include software versioning.

1.0.6
================================================================================
Thread_KW_Tun
	- Can also open SPI devices for Serial TUN operation.
Framer
	- Add CRC field size parameter to InitializeFramer().
	- Add SetCrcFieldSize() function.
	- Implement sending of ACKs from host_sdk on every received frame from the
	  board
	- Minor optimizations for Linux on Read* functions.
RawFrame
	- Add GetAckFrame() function which generates FSCI-ACK frames.
utils
	- Add ParseConfig() function which reads host_sdk's configuration parameters
	  from /usr/share/hsdk/hsdk.conf
SPIDevice
	- Rename and refactor SPIFirstRead() to SPIInitialize().
	- Add more logic to SPIReadFSCIData().
UARTDiscovery
	- Identify J-Link CDC UART (VID, PID) = (1366, 1015) as NXP device.
PhysicalDevice
	- Implement reception of ACKs from the embedded device in the
	  DeviceThreadRoutine().
77-mm-usb-device-blacklist.rules
	- Also ignore J-Link CDC UART. Bump to latest version from ModemManager
	  official tree.
hsdk.conf
	- First version of the configuration file. Only available on Linux.

Python
	•	Updated THCI bindings
		o	MESHCOP_MgmtSetRequest: Added TimestampEnable boolean parameter. If
		True, also provide Seconds (6 bytes) and Ticks (2 bytes) parameters.
		See test/meshcop_mgmtset.py for example of usage.
		o	THR_SetAttrRequest - Add DoNotGeneratePartitionId attributeId.
		o	Other commands added
	•	Framework updates
		o	commands/comm.py - change in send() method
		o	hsdk/sniffer.py - add callback parameter on each received packet -
			defaults to print_pkt()
		o	hsdk/utils.py - change in notifyObservers() to prevent memory leaks
		o	hsdk/framing/fsci_framer.py - minor update on send() method

1.0.7
================================================================================
Add/update Freescale copyrights.

UARTDiscovery
	- Remove OS X UART discovery as not working
	- Rewrite Windows CheckRegistry function

PhysicalDevice
	- Add FSCI ACK policy parameter to InitPhysicalDevice(). Available values:
	  NONE, TX, RX, TX_RX, GLOBAL. If GLOBAL, use settings in hsdk.conf.

Python
	- add support for setting the FSCI ACK policy per device
	- deprecate MONITOR_MODE per device, make it global and configurable from
	  config.py.

Documentation
	- add more information to HOWTO-FSCIACK

1.0.8
================================================================================
C
	- FSCI-ACK: prevent other TXs until the ACK for RX packet is sent back to
	  the board
	- Fix lock acquire bug on Linux
	- Make file descriptors blocking on Linux

Python
	- Add coap_thci.py example script
	- Add shebangs on all test/commissioning scripts
	- Fix SIGSEGV on amd64 systems
	- Minor other improvements

1.0.9
================================================================================

C
	- Minor cppcheck fixes

Python
	- Remove Thread bindings
	- Add BLE bindings

1.1.0
================================================================================
This is the first unified package with Python bindings for both the BLE and
Thread stacks!

C
	- Fixes regarding virtual interface and CRC manipulation

Python
	- subsystem updates for virtual interface selection
	- subsystem updates to allow different protocol (e.g. Thread and BLE)
	  commands to be sent to the same physical device
	- fsci_bootloader.py: do not transfer useless 0xFFs from the end of the
	  binary image, which results in better time transfers
	- add hrs.py script which demonstrates a Heart Rate Sensor BLE profile
	- add multimode.py script which demonstrates a basic Thread network
	  formation with continuous ping and Heart Rate sensor at the same time
	- update copyrights on txThings based examples (rgb_led.py, temp.py)
	- reworks of some scripts in the wireless_connectivity.test package

1.1.1
================================================================================
C
	- Fix destination MAC address in the PCAP submodule.

1.2.0
================================================================================

hsdk/demo/thread-multicast-routing
	- Add configuration files to exercise Thread multicast capabilities.

1.3.0
================================================================================
Rename ZTC -> FSCI.
Rename Freescale -> NXP, except for copyrights.
Using NXP OUI in the PCAP submodule.
Fixed some issues reported by a static code analysis tool.
Python bindings regenerated from the latest ThreadIP.xml.

1.3.1
================================================================================
OTA Python example scripts:
- updated README
- removed firmware binaries
- removed CoAP test script as plain UDP is now used
- minor changes to test_dongle_mode and test_standalone_mode

1.3.2
================================================================================
Changes to Makefiles, to allow disabling SPI/RNDIS/UDEV support from a single
switch. That is:
	`make SPI=n UDEV=n RNDIS=n` will disable support for all three, while
	`make RNDIS=n` will only disable support for RNDIS

Shared libraries are now installed by default under /usr/local/lib. Path may be
changed using variable PREFIX in the Makefile.
Configuration file hsdk.conf _must_ now be placed under /usr/local/etc/hsdk/.

Fix CPU reset on Windows for USB-KW24.

1.3.3
================================================================================
Regenerate Python THCI bindings and fix THR_DiagTestGet.
relay.py: Change mDNS settings for Thread 1.1

1.4.0
================================================================================
Python:
    - Stop Framer threads that are no longer needed.
    - Fix possible bug with disabling colored output.
    - On Linux, sniffers can inject packets into a TAP device to be opened by
      Wireshark.
C:
    - Updates to allow for the new VCP NXP VID.

1.4.1
================================================================================
Fixed some issues for Python:
    - Serial TUN RX callback
    - OTA commands
    - Sniffer over TAP in Linux

1.4.2
================================================================================
Fix some issues for Python:
    - get_neigh_ula.py script
    - RPCAP sniffer thread on Windows consuming 100% of a core
Device discovery:
    - add support for OM15028-1 / JN5179 VID/PID pair
